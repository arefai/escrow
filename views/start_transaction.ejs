<!DOCTYPE html>
<html>
  <head>
    <title>Share Escrow Bot</title>
    <meta name="viewport" content="user-scalable=no, width=device-width, initial-scale=1, maximum-scale=1">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script>
      var user = '';     
      var psid = '';
      var shareFlow;
      function sendToStripe() {
         console.log("hellllooo");
         MessengerExtensions.getContext("419937085114571", function (thread_context) {
           psid = thread_context.psid;
           let url = "https://hospitable-quarter.glitch.me/authorize?redirect=https://hospitable-quarter.glitch.me/receiveLogin/start_transaction";
           url = url.concat("&psid=").concat(psid);
           url = url.concat("&txid=").concat(txid);
           window.location.replace(url);
        }, (err) => {console.log(err);});
      }
      
    </script>
  </head>
  <body>
    <script>var txid = <%- JSON.stringify(txid) %>;</script>
    <script>
      // document.getElementById('in_script').style='display:inline';
      // document.write('hello world');
      //const GoogleImages = require('google-images');
      //const clientgoogle = new GoogleImages('004111064101966962888:8zjkinbqpek', 'AIzaSyCgl-fixloop9pTi5v_6Z-GhoclLeQHBGE');
      
      (function(){
        var oldLog = console.log;
        console.log = function (message) {
          // document.write('message: ' + message);
          // document.write(typeof(message));
          // message = String(message);
          return fetch('https://hospitable-quarter.glitch.me/log', {
            body: JSON.stringify({text: message}), // must match 'Content-Type' header
            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
            credentials: 'same-origin', // include, same-origin, *omit
            headers: {
              'user-agent': 'Mozilla/4.0 MDN Example',
              'content-type': 'application/json'
            },
            method: 'POST', // *GET, POST, PUT, DELETE, etc.
            mode: 'cors', // no-cors, cors, *same-origin
            redirect: 'follow', // *manual, follow, error
            referrer: 'no-referrer', // *client, no-referrer
          })
          .then(function(response) {return response.json()}) // parses response to JSON
          oldLog.apply(console, arguments);
        };
      })();
      console.log('in script');
      console.log('txid: '.concat(txid));
      // Sends response messages via the Send API
      console.log('hello');
      let x = txid;
      // let user = '';
      var role = '';
      // console.log(txid);
      
      function SubForm(){
        console.log('subform called');
        let link = '<%- link %>';
        link = link.concat(user);
        console.log("link is: " + link);
        $.ajax({
          url:link,
          type:'post',
          data:$('#chargeForm').serialize(),
          success:function(){
            shareFlow();
          }
        });
      }
      
      function sendText (message) {
        console.log('sendText called');
        let req = 'https://hospitable-quarter.glitch.me/send_message';
        let body = {
          psid: user,
          txid: txid,
          message: message
        };
        fetch(req, {
          body: JSON.stringify(body), // must match 'Content-Type' header
          cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
          credentials: 'same-origin', // include, same-origin, *omit
          headers: {
            'user-agent': 'Mozilla/4.0 MDN Example',
            'content-type': 'application/json'
          },
          method: 'POST', // *GET, POST, PUT, DELETE, etc.
          mode: 'cors', // no-cors, cors, *same-origin
          redirect: 'follow', // *manual, follow, error
          referrer: 'no-referrer', // *client, no-referrer
        });
      }
      function redirect_to_payments() {
          let url = "https://hospitable-quarter.glitch.me/payments?";
          url = url.concat("psid=").concat(user);
          url = url.concat("&txid=").concat(txid);
          url = url.concat("&user=").concat(role);
          url = url.concat("&redirect_url=").concat("https://hospitable-quarter.glitch.me/redirect");
          url = url.concat("?txid=").concat(txid);
          
          console.log(url);
          window.location.replace(url);
        }
      
      function confirm() {
        // post to server id/role of confirming user
        // on receive, parse json, check if both_agreed
        // if yes: shareflow to process payments
        // if no: close browser
        
        let data = {
          psid: user,
          role: role,
          txid: txid,
        };
        console.log(data);

        let url = 'https://hospitable-quarter.glitch.me/user_agree';
        console.log(url);
        console.log('about to send confirm');
        fetch(url, {
          body: JSON.stringify(data), // must match 'Content-Type' header
          cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
          credentials: 'same-origin', // include, same-origin, *omit
          headers: {
            'user-agent': 'Mozilla/4.0 MDN Example',
            'content-type': 'application/json'
          },
          method: 'POST', // *GET, POST, PUT, DELETE, etc.
          mode: 'cors', // no-cors, cors, *same-origin
          redirect: 'follow', // *manual, follow, error
          referrer: 'no-referrer', // *client, no-referrer
        }).then((response) => {
          if (!response.ok) throw Error(response.statusText);
          return response.json();
        }).then((data) => {  
          $("#confirm").hide();
          $("#payNow").show();
          if (role === 'buyer')
            $("#buyer_pay").show();
          else
            $("#seller_pay").show();
          
        }).catch(error => console.log(error));
        
      }
      
      function deny() {
        // post to server id/role of confirming user
        // on receive, parse json, check if both_agreed
        // if yes: shareflow to process payments
        // if no: close browser
        console.log('deny called');
        let data = {
          psid: $('#confirm_id').html(),
          role: $('#confirm_role').html(),
          txid: txid,
        };
        console.log(data);
        let url = 'https://hospitable-quarter.glitch.me/user_disagree';
        console.log(url);
        fetch(url, {
          body: JSON.stringify(data), // must match 'Content-Type' header
          cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
          credentials: 'same-origin', // include, same-origin, *omit
          headers: {
            'user-agent': 'Mozilla/4.0 MDN Example',
            'content-type': 'application/json'
          },
          method: 'POST', // *GET, POST, PUT, DELETE, etc.
          mode: 'cors', // no-cors, cors, *same-origin
          redirect: 'follow', // *manual, follow, error
          referrer: 'no-referrer', // *client, no-referrer
        }).then((response) => {
          if (!response.ok) throw Error(response.statusText);
          return response.json();
        }).then((data) => {
          console.log('got deny data');
          if (data.share_flow) {
            let url = "https://hospitable-quarter.glitch.me/payments" + txid;
            let message = {
              "attachment":{
                "type":"template",
                "payload":{
                  "template_type":"generic",
                  "elements": [{
                    "title":"Transaction Agreed to, now click to pay",
                    "image_url": "https://ivycoach.com/content/uploads/2011/07/University-Of-Michigan-Admissions-Stats.jpg",
                    "subtitle": "SUBTITLE",
                    "default_action":{
                      "type":"web_url",
                      "url": url,
                      "messenger_extensions": true,
                      "webview_height_ratio": "tall",
                    },
                    "buttons":[{
                      "messenger_extensions": true,
                      "type":"web_url",
                      "url":url,
                      "webview_height_ratio":"tall",
                      "title":"Process Payment"
                    }]
                  }]
                }
              }
            };
            MessengerExtensions.beginShareFlow(function(share_response) {
              // User dismissed without error, but did they share the message?
              if(response.is_sent === true){ 
                // User shared. We're done here!
                MessengerExtensions.requestCloseBrowser();
                console.log('success');
              }
              else{
                // User canceled their share! 
                // try again?
              }
            }, 
            function(errorCode, errorMessage) {      
              // An error occurred in the process
              console.log('error');
            },
            message, 
            "current_thread");
          }
          else {
            console.log("about to close browser");
            MessengerExtensions.requestCloseBrowser(null, null);
          }
        }).catch(error => console.log(error));
      }
      
      window.extAsyncInit = function() {
        
        console.log('messenger extensions loaded');   
        shareFlow = function() {
          console.log("Share flow");
          let url = "https://hospitable-quarter.glitch.me/final_pay?txid=" + txid;
          let message = {
            "attachment":{
              "type":"template",
              "payload":{
                "template_type":"generic",
                "elements": [{
                  "title":"The transaction has been agreed to, now click to pay with stripe",
                  "subtitle": "Transaction",
                  "default_action":{
                    "type":"web_url",
                    "url": url,
                    "messenger_extensions": true,
                    "webview_height_ratio": "tall",
                  },
                  "buttons":[{
                    "messenger_extensions": true,
                    "type":"web_url",
                    "url":url, 
                    "webview_height_ratio":"tall",
                    "title":"Process Payment"
                  }]
                }]
              }
            }
          };
          console.log("About to do messenger extensions share flow");
          console.log(MessengerExtensions);
          MessengerExtensions.beginShareFlow(function(share_response) {
            // User dismissed without error, but did they share the message?
            if(share_response.is_sent === true){ 
              // User shared. We're done here!
              MessengerExtensions.requestCloseBrowser();
              console.log('success');

              if (role === 'seller') {
                console.log('about to send message');
                sendText('Upload your electronic item here.');
              }
            }
            else{
              // User canceled their share! 
              // try again?
              console.log('asdhfalsdfjlasdjkfajhksldfhlajksdfhjklasjklfajkhld');
            }
          }, 
          function(errorCode, errorMessage) {      
            // An error occurred in the process
            console.log(errorCode);
            console.log(errorMessage);
            console.log('error');
          },
          message, 
          "current_thread");
        }
        
        
        function send_private_message() {
          console.log('in send_pm');
          //user = '';
          MessengerExtensions.getContext("419937085114571",
            function success(thread_context) {
              console.log(thread_context.type);
              user = thread_context.psid;
              console.log('got context, about to send pm');
              if (typeof sendText == 'undefined'){
                  console.log('sendtext undefined');
              }
              sendText(user, "We are in the private chat to confirm your transaction");
            },
            function error(err) {
              console.log("Error on get context in askPermission");
            }
          );
        }
        function ask_profile() {
          MessengerExtensions.getGrantedPermissions(function (permissions_response) {
            if (permissions_response.permission.indexOf('user_profile') > -1) {
              // return getName();
            }
            else {
              MessengerExtensions.askPermission(
                function (permission_response) {
                  if (permission_response.permissions.indexOf('user_profile') > -1) {
                    // return getName();
                  }
                  else {
                    console.log('permission denied');
                  }
                }, function(errorCode, errorMessage) {
                  console.log('user_profile permission denied');
                },
                'user_profile'
              );
            }
          }, function () {
            console.log('error getting granted permissions');
          });
        }
        function ask_messaging() {
          console.log('ask_messaging called');
          MessengerExtensions.getGrantedPermissions(function (permissions_response) {
            if (permissions_response.permission.indexOf('user_messaging') > -1) {
              // return getName();
            }
            else {
              MessengerExtensions.askPermission(
                function (permission_response) {
                  if (permission_response.permissions.indexOf('user_messaging') > -1) {
                    // return getName();
                  }
                  else {
                    console.log('permission denied');
                  }
                }, function(errorCode, errorMessage) {
                  console.log('user_messaging permission denied');
                },
                'user_messaging'
              );
            }
          }, function () {
            console.log('error getting granted permissions');
          });
        }
        function buyer(info) {
          role = 'buyer';
          console.log('user is buyer');
          console.log(info);
          // buyer
          document.getElementById('role').innerHTML = 'buyer';
          document.getElementById('review').style = 'display:inline'; // worth factoring out?
          
          if (!info.seller_agreed) {
            $("#review").hide();
            $("#waiting_buyer").show();
            return;
          }
          
          if (info.buyer_agreed) { // factor out to function with (other_confirmed, you_confirmed)
            if (info.buyer_paid === 0) {
                $("#confirm").hide();
                $("#buyer_pay").show();
                $("#payNow").show();
            }
            else if (info.seller_agreed) {
              // this stage is complete
              document.getElementById('complete').style = 'display:inline';
            }
            else {
              // waiting on seller
              document.getElementById('waiting').style = 'display:inline';
              document.getElementById('waiting_on').value = 'Seller';
            }
          }
          else {
            // show confirm button
            console.log($('#test'));
            console.log('showing confirm button');
            document.getElementById('confirm').style = 'display:inline';
            // hidden form elements?
            console.log('showing confirm/deny');
            console.log('user: '.concat(user));
            //console.log($('#confirm'));
            console.log(document.getElementById('confim_id'));
            $('#confirm_id').html(user).hide();
            //document.getElementById('confim_id').innerHTML = user;
            console.log('set_role: buyer');
            $('#confirm_role').html('buyer').hide();
            console.log('done with consoling1');
            //document.getElementById('confirm_role').innerHTML = 'buyer';
            console.log('id: '.concat($('#confirm_id').html()));
            console.log('role: '.concat($('#confirm_role').html()));
            console.log('done with consoling2');
          }
        }
        function seller(info) {
          role = 'seller';
          console.log('user is seller');
          console.log(info);
          
          if (!info.buyer_agreed) {
            $("#review").hide();
            $("#waiting_seller").show();
            return;
          }
          
          if (info.seller_agreed){
            // console.log(info.itemLink);
            if (info.itemLink !== null){
              if (info.seller_paid === 0) {
                $("#confirm").hide();
                $("#seller_pay").show();
                $("#payNow").show();
              }
              else if (!info.asked_seller) {
                sendText('upload your pdf');
              }
              else {
                $('#check_messages').show();
              }
            }
            else {
              if (!info.buyer_agreed) {
                $('#waiting').show();
              }
              else {
                $('#complete').show();
              }
            }
          }
          else {
            $('#confirm').show();
            // hidden form elements?
            $('#confim_id').html(user);
            console.log($('#confirm_id').html())
            $('#confirm_role').html('seller');
          }
          Document.getElementById('role').value = 'seller';
        }
        
        function update_transaction(role) {
          console.log('update_transaction called');
          if (role === 'seller') {
            ask_messaging();
          }
          ask_profile();
          data = {
            psid: user, 
            txid: txid,
            role: role,
          };
          console.log('psid:'.concat(data.psid));
          console.log('txid:'.concat(data.txid));
          console.log('role:'.concat(data.role));
          url = 'https://hospitable-quarter.glitch.me/update_transaction'
          fetch(url, {
            body: JSON.stringify(data), // must match 'Content-Type' header
            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
            credentials: 'same-origin', // include, same-origin, *omit
            headers: {
              'user-agent': 'Mozilla/4.0 MDN Example',
              'content-type': 'application/json'
            },
            method: 'POST', // *GET, POST, PUT, DELETE, etc.
            mode: 'cors', // no-cors, cors, *same-origin
            redirect: 'follow', // *manual, follow, error
            referrer: 'no-referrer', // *client, no-referrer
          }).then((response) => {
            if (!response.ok) throw Error(response.statusText);
            return response.json();
          }).then((data) => {
            console.log(data);
          }).catch(error => console.log(error));
        }
        function showMainDiv(thread_context) {
            user = thread_context.psid;
            // find whether user is buyer or seller
            console.log('got context: continue');
            let url = 'https://hospitable-quarter.glitch.me/transaction_info?txid=' + txid;
            console.log(url);
            fetch(url, { credentials: 'same-origin' })
            .then((response) => {
              if (!response.ok) throw Error(response.statusText);
              return response.json();
            })
            .then((data) => {
              // set displayed elements appropriately 
              // perhaps check if both confirmed first (stage finished)
              console.log('got data');
              console.log(data);
              let info = data.transaction;
              $("#header").show();
              document.getElementById('item').innerHTML = info.itemDescription;
              document.getElementById('price').innerHTML = info.price;
              console.log('got price');
              console.log(info);
              console.log(info.seller);
              console.log(typeof info.seller);
              if (info.seller === null){
                console.log('in seller === null');
                if (info.buyer === user) {
                  console.log('showing buyer');
                  buyer(info);
                }
                else {
                  console.log('updating transaction seller');
                  update_transaction('seller'); // see todo what if above
                  console.log('showing seller');
                  seller(info);
                }
              }
              else if (info.buyer === null) {
                console.log('in buyer');
                if (info.seller === user) {
                  console.log('showing seller');
                  seller(info);
                }
                else {
                  console.log('updating transaction buyerasa');
                  update_transaction('buyer');
                  console.log('showing buyer');
                  buyer(info);
                }
              }
              else {
                if (info.seller === user) {
                  seller(info);
                }
                else if (info.buyer === user) {
                  buyer(info);
                }
                else {
                  // error
                }
              }
            })
            .catch(error => console.log(error));
            // if seller & has not uploaded, check permission & tell to upload
            // then for buyer and seller show button to confirm
            // where once they click, checks if both have the agreed
            // & if they have sharesflow to begin processing payments
            // & if not close browser, then if they click again show waiting for other party
            // check this last part first
          }
          function showPaymentsOrForm(thread_context) {
            console.log("show payments");
            user = thread_context.psid;
            fetch("https://hospitable-quarter.glitch.me/checkUser", {
              body: JSON.stringify({psid : thread_context.psid}), // must match 'Content-Type' header
              cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
              credentials: 'same-origin', // include, same-origin, *omit
              headers: {
                'user-agent': 'Mozilla/4.0 MDN Example',
                'content-type': 'application/json'
              },
              method: 'POST', // *GET, POST, PUT, DELETE, etc.
              mode: 'cors', // no-cors, cors, *same-origin
              redirect: 'follow', // *manual, follow, error
              referrer: 'no-referrer', // *client, no-referrer
            })
            .then((response) => {return response.json();})
            .then((data) => {
              console.log(data);
              if (data.userPresent)
                showMainDiv(thread_context);
              else
               $("#payments").show();
            })
            .catch( (err) => { console.log(err)});
          }
      
        function showError(err) {
           console.log(err);
           $("#errorMessage").show();
        }
      
        console.log("show payments or form");
        console.log(MessengerExtensions);
        MessengerExtensions.getContext("419937085114571", showPaymentsOrForm, showError);
        // seller flow
        // check whether the pdf has been uploaded
        // buyer flow
        // show them button to confirm, if they are second to confirm once clicked, shareflow
        
      };
      
      (function(d, s, id){
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) {return;}
        js = d.createElement(s); js.id = id;
        js.src = "//connect.facebook.com/en_US/messenger.Extensions.js";
        fjs.parentNode.insertBefore(js, fjs);
      }(document, 'script', 'Messenger'));
    </script>
    <!--<div id="notready" style="display:inline">
      HasdfadasdfEither one party has not confirmed the transaction or the seller has not uploaded the item
      <br> <button onclick="click()" value="Click Me">dfajhsdk</button>
    </div>-->
    <div id="header" style="display:none;">
      <h2 color="color:#3B5998">
        Confirm Transaction
      </h2>
      <p id="seller_help" style="display:none;">
        After you confirm, we will send you a message to upload your item. E-scrow bot charges BOTH parties a temporary hold to guarantee safety and we will reimburse you after the transaction is complete.
      </p>
      <p id="buyer_help" style="display:none;">
        Once you confirm you want to buy this item, we will charge you a temporary hold to guarantee safety for both parties. This hold will be reimbursed after the transaction is complete and we will then send your item for approval. 
      </p>
    </div>
    <div id="complete" style="display:none">
      Both parties have agreed to the transaction, this stage is complete.<br>
      Please check if a more recent stage of the process has been shared in your chat.<br>
    </div>
    <div id="waiting_seller" style="display:none">
      You have agreed to the transaction.<br>
      We are currently waiting on the buyer to complete their next step.<br>
    </div>
    <div id="waiting_buyer" style="display:none">
      You have agreed to the transaction.<br>
      We are currently waiting on the seller to complete their next step.<br>
    </div>
    <div id="already_sent" style="display:none">
      We have already sent you a direct message, please upload the electronic item in that chat.<br>
    </div>
    <div id="check_messages" style="display:none">
      We have sent you a direct message, please upload your electronic item there.<br>
    </div>
    <div id="review" style="display:none">
      Item is <span id="item">{item}</span>
      Price is $<span id="price">{price}</span>
      you are the <span id="role"></span>
    </div>
    <div id="confirm" style="display:none">
      <button id="confirm_button" onclick="confirm()" style="border-style:solid;background-color:white;border-color:#3B5998;border-radius:3px;">
        Confirm and Continue
      </button>
      <button id="deny_button" onclick="deny()" style="border-style:solid;background-color:white;border-color:#3B5998;border-radius:3px;">
        Deny offer
      </button>
      <div style="display:none">
        <div id="confirm_id" ></div>
        <div id="confirm_role"></div>
      </div>

    </div>

    <div id="in_script" style="display:none">
      We are in the script
    </div>
    
   <div id="payNow" style="display:none;">
      <div id="buyer_pay" style="display:none;">
        <p>
          Please submit your payment for the item using the button below. We will charge your stripe account for the agreed upon price plus an insurance hold. BOTH parties will be charged
         this hold. This hold guarantees your security in this transaction. In the case of a scam, the holds will be used to reimburse you for damages.
        </p>  
     </div>
     <div id="seller_pay" style="display:none;">
       <p>
         Please submit a payment for our insurance hold. This is a temporary hold that will be reimbursed upon transaction completion. BOTH parties will be charged
         this hold. This hold guarantees your security in this transaction. In the case of a scam, the holds will be used to reimburse you for damages.
       </p>
     </div>
      <form id="chargeForm" action="javascript:SubForm();" method="POST">
        <script
          src="https://checkout.stripe.com/checkout.js" class="stripe-button"
          data-key="pk_test_SfFEOJ30IbciexZavBVyQoZk"
          data-name="Escrow Bot"
          data-amount="<%= amount %>"
          data-description="Escrow Payment"
          data-zip-code="true"
          data-image="https://stripe.com/img/documentation/checkout/marketplace.png"
          data-locale="auto">
        </script>
      </form>
    </div>
    
    
    <div id="payments" style="display:none">
      <h2>
        Connect With Stripe
      </h2>
      <p>
        It looks like we don't know your payment information. For us to be able to complete your transaction, you must authorize us to use your Stripe account.
      </p>
      <a href="javascript:void(0);" onclick="sendToStripe()">
          <button id="paymentBtn" class="btn btn-primary">
            Pay with Stripe 
          </button>
      </a>
    </div>
    
    
  </body>
</html>